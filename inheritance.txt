# Multilevel inheritance

class A
{
A()
{
System.out.println(&quot;Inside A&#39;s constructor&quot;);
}

}
class B extends A
{ B()

{ System.out.println(&quot;Inside B&#39;s constructor&quot;);
}
}
class C extends B
{
C()
{ System.out.println(&quot;Inside C&#39;s constructor&quot;);
}
}
class demo
{
public static void main(String args[])
{
C c1=new C();

}
}


# SINGLE INHERITANCE:-
import java.util.*; 
import java.lang.*; 
import java.io.*; 
 
class one{ 

    public void print_geek() 
    { 
        System.out.println("Geeks"); 
    } 
} 
  
class two extends one { 
    public void print_for()     { 
        System.out.println("for"); 
    } 
} 

// Driver class 
public class Main { 

    public static void main(String[] args) 
    { 
        two g = new two(); 
        g.print_geek(); 
        g.print_for(); 
        g.print_geek(); 
    } 
}

# Hierarchial 
class Teacher {
 void teach() {
  System.out.println("Teaching subject");
 }
}
class Student extends Teacher {
 void listen() {
  System.out.println("Listening");
 }
}
class Principal extends Teacher {
 void evaluate() {
  System.out.println("Evaluating");
 }
}
class CheckForInheritance {
 public static void main(String argu[]) {
  Principal p = new Principal();
  p.evaluate();
  p.teach();
  // p.listen(); will produce an error
 }
}


